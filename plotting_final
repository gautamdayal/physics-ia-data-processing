plt.style.use('seaborn')
>>> plt.rcParams.update({'lines.markeredgewidth': 1})
>>> plt.errorbar(Angles, Lift, yerr=lift_error, ls='none', barsabove=True)
<ErrorbarContainer object of 3 artists>
>>> Angles
[0, 10, 20, 30, 40, 50, 60, 70]
>>> Y = [i for i in range(71)]
>>> Y
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70]
>>> X = [i for i in range(71)]
>>> Y = plt.polyval(plt.polyfit(Angles, Lift, 2), X)
>>> plt.plot(X, Y)
[<matplotlib.lines.Line2D object at 0x10b7fd2b0>]
>>> plt.xlabel("Angle of Attack / ยบ")
Text(0.5, 0, 'Angle of Attack / ยบ')
>>> plt.ylabel("Lift Force / N")
Text(0, 0.5, 'Lift Force / N')
>>> plt.show()
>>> plt.scatter(Lift, color='yellow')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: scatter() missing 1 required positional argument: 'y'
>>> plt.scatter(Angles,Lift, color='yellow')
<matplotlib.collections.PathCollection object at 0x11cc18710>
>>> plt.show()
